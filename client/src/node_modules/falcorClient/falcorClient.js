const co = require("co")

module.exports = angular.module("falcorception.falcorClient", []).component("falcorClient", {
  templateUrl: "node_modules/falcorClient/falcorClient.html",
  bindings: {
    api: "<",
  },
  controller($scope, falcor, falcorFactory) {
    const ctrl = this
    const model = falcorFactory(ctrl.api.url)

    ctrl.get = co.wrap(function* (paths) {
      yield ctrl.falcorAction("get", arguments)
    })

    ctrl.set = co.wrap(function* (paths, values) {
      yield ctrl.falcorAction("setValue", arguments)
    })

    ctrl.call = co.wrap(function* (path, args, refPaths, thisPaths) {
      args = args && JSON.parse(args)
      refPaths = refPaths && JSON.parse(refPaths)
      thisPaths = thisPaths && JSON.parse(thisPaths)
      yield ctrl.falcorAction("call", _.compact(arguments))
    })

    ctrl.falcorAction = co.wrap(function* falcorAction(action, args) {
      ctrl.error = false
      ctrl.response = null
      try {
        const response = yield model[action].apply(model, args)
        ctrl.response = _.cloneDeepWith(response.json, value => {
          if (_.isObject(value)) delete value["$__path"]
          return undefined
        })
      } catch (errors) {
        ctrl.response = errors instanceof Error ? errors.message : errors
        ctrl.error = true
      }
      $scope.$apply()
    })
  },
})
